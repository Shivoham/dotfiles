set number
set expandtab " converts tabs to spaces
set autoindent " automatically copy indentation from previous line
set smartindent " indents one extra level according to current syntax
set scrolloff=3
set ignorecase
set smartcase
set tabstop=4
set softtabstop=4
set shiftwidth=4
set mouse=a
set ls=2
set ruler
set clipboard=unnamedplus
set colorcolumn=80
set hidden
set directory=~/.vim/tmp
au BufNewFile,BufRead *.twig set ft=htmljinja
set incsearch
set hlsearch

" exit from insert mode
:imap jj <Esc>

" map leader
let mapleader = ","

" highlight trailing spaces
set list
set listchars=eol:á›Ž,trail:â€§,tab:â–¹âˆ™,nbsp:â…¹
match ErrorMsg '\s\+$'

if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://rawhubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

function! StripTrailingWhitespace()
  normal mZ
  %s/\s\+$//e
  normal `Z
endfunction

autocmd FileType php,javascript,ts,css,html,xml,yaml,vim autocmd BufWritePre <buffer> :call StripTrailingWhitespace()
autocmd FileType html,javascript,css setlocal tabstop=2 softtabstop=2 shiftwidth=2

" Automatically create directory if it does not exist
au BufWrite * :call <SID>MkdirsIfNotExists(expand('<afile>:h'))
function! <SID>MkdirsIfNotExists(directory)
    if(!isdirectory(a:directory))
        call system('mkdir -p '.shellescape(a:directory))
    endif
endfunction

" CURSOR
highlight Cursor guifg=white guibg=white
set cursorline

" Ctags
set tags+=vendor.tags
nnoremap <F6> :!ctags -f tags src spec features&<CR>
nnoremap <F7> :!ctags -f vendor.tags vendor node_modules&<CR>

inoremap <Leader>u <C-O>:call PhpInsertUse()<CR>
noremap <Leader>u :call PhpInsertUse()<CR>
inoremap <Leader>e <C-O>:call PhpExpandClass()<CR>
noremap <Leader>e :call PhpExpandClass()<CR>

" Do me a grep please !
vmap <leader>f y:grep -r "<C-r>""
" grep under the cursor
nmap <leader>f :grep -r "<C-r><C-w>"
set grepprg=ag\ --nogroup\ --nocolor

" tags jump
map tt g<C-]>
map TT <C-T>

" easy navigation between words
nmap <C-h> b
nmap <C-j> 5j
nmap <C-k> 5k
nmap <C-l> w
vmap <C-h> b
vmap <C-j> 5j
vmap <C-k> 5k
vmap <C-l> w

" MACROS
let @a='^f,a€kD'

call plug#begin()
Plug 'vim-scripts/The-NERD-tree'
Plug 'vim-scripts/UltiSnips'
Plug 'kien/ctrlp.vim'
Plug 'SirVer/ultisnips'
Plug 'sjbach/lusty'
Plug 'powerline/powerline', { 'rtp': 'powerline/bindings/vim' }
Plug 'arnaud-lb/vim-php-namespace'
Plug 'godlygeek/tabular'
Plug 'tpope/vim-fugitive'
Plug 'vim-scripts/bufkill.vim'
Plug 'vim-scripts/BufOnly.vim'
Plug 'tobyS/vmustache'
Plug 'tobyS/pdv'
Plug 'editorconfig/editorconfig-vim'
Plug 'Herzult/phpspec-vim'
Plug 'majutsushi/tagbar'
Plug 'vim-scripts/Rename'
Plug 'joonty/vdebug'
Plug 'austintaylor/vim-commaobject'
Plug 'scrooloose/syntastic'
Plug 'docteurklein/vim-symfony'
Plug 'tpope/vim-abolish'
Plug 'tpope/vim-surround'
Plug 'Raimondi/delimitMate'
Plug 'karlbright/qfdo.vim'
Plug 'elixir-lang/vim-elixir'
Plug 'isRuslan/vim-es6'
Plug 'leafgarland/typescript-vim'
Plug 'prettier/vim-prettier', {
  \ 'do': 'yarn install',
  \ 'for': ['javascript', 'typescript', 'css', 'less', 'scss', 'json', 'graphql', 'markdown', 'vue'] }
call plug#end()

let g:Powerline_symbols = 'fancy'

set wildmenu
set wildmode=list:longest
set wildignore=data/**,app/cache/**,web/bundles/**,src/*/*Bundle/vendor,src/*/vendor,old/*,app/lib/*,node_modules/**

let g:ctrlp_custom_ignore = {
  \ 'dir': '\v([\/]\.(git|hg|svn))|([\/]node_modules)|([\/]compiled)|([\/]dist)|([\/]app/cache)|([\/]bower_components)|([\/]doc)|([\/]vendor)$',
  \ }
let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'

" loads the .vimrc in the current folder if exists
set exrc

" copy to x buffer
vmap <leader>y "+y<CR>
nmap <leader>p "+p<CR>

set t_Co=256
colorscheme hybrid

autocmd InsertEnter * hi LineNr      ctermfg=16 ctermbg=214 guifg=Orange guibg=#151515
autocmd InsertLeave * hi LineNr      term=underline ctermfg=59 ctermbg=232 guifg=#605958 guibg=#151515

" clear vim cache
nnoremap <leader>c :!rm -rf ~/.vim/tmp/*<CR><CR>

nmap <C-b> <leader>lb
nmap <C-f> <leader>lr
nmap <leader>bb :BD<CR>              " Kill current buffer
nmap <leader>bc :BufOnly<CR>
nnoremap <leader>/ :let @/=""<CR>

" PHPDOC

let g:pdv_template_dir = $HOME ."/.vim/bundle/pdv/templates_snip"
nnoremap <Leader>d :call pdv#DocumentWithSnip()<CR>

" PRETTIER
let g:prettier#autoformat = 0
autocmd BufWritePre *.js,*.jsx,*.mjs,*.ts,*.tsx,*.css,*.less,*.scss,*.json,*.graphql,*.md,*.vue PrettierAsync

" TAGBAR

nmap <F8> :TagbarToggle<CR>

" TROLL

command! Yeah : ! cvlc ~/.samples/Yeah.mp3 vlc://quit --play-and-exit
command! Prout : ! cvlc ~/.samples/third_type.mp3 vlc://quit --play-and-exit
map <Leader>jj :Yeah<CR>
map <Leader>tt :Prout<CR>

" ULTISNIPS

let g:UltiSnipsExpandTrigger="<tab>"
let g:UltiSnipsJumpForwardTrigger="<tab>"
let g:UltiSnipsJumpBackwardTrigger="<s-tab>"

map <up> <nop>
map <down> <nop>
map <left> <nop>
map <right> <nop>
imap <up> <nop>
imap <down> <nop>
imap <left> <nop>
imap <right> <nop>

